<!-- root队列下划分的三个队列 -->
yarn.scheduler.capacity.root.queues=analysis,default,onlinecrontab
<!-- root总资源为 100% -->
yarn.scheduler.capacity.root.capacity=100
<!-- 设置有多少资源可以用来运行app master，即控制当前激活状态的应用。默认是10%。 -->
yarn.scheduler.capacity.maximum-am-resource-percent=0.1
<!-- 设置系统中可以同时运行和等待的应用数量。默认是10000. -->
yarn.scheduler.capacity.maximum-applications=10000


yarn.scheduler.capacity.node-locality-delay=40
yarn.scheduler.capacity.queue-mappings-override.enable=false
yarn.scheduler.capacity.resource-calculator=org.apache.hadoop.yarn.util.resource.DefaultResourceCalculator
yarn.scheduler.capacity.root.accessible-node-labels=*
<!-- 访问控制列表ACL控制谁可以向该队列提交任务。如果一个用户可以向该队列提交，那么也可以提交任务到它的子队列。 -->
yarn.scheduler.capacity.root.acl_administer_queue=*
<!-- 可以使RUNNING或者STOPPED.如果队列是STOPPED状态，那么新应用不会提交到该队列或者子队列。同样，如果root被设置成STOPPED，那么整个集群都不能提交任务了。现有的应用可以等待完成，因此队列可以优雅的退出关闭。 -->
yarn.scheduler.capacity.root.acl_submit_applications=*

yarn.scheduler.capacity.root.analysis.acl_administer_queue=*
yarn.scheduler.capacity.root.analysis.acl_submit_applications=*
yarn.scheduler.capacity.root.analysis.capacity=5
yarn.scheduler.capacity.root.analysis.maximum-capacity=40
<!-- 队列资源的使用上限。由于系统空闲时，队列可以使用其他的空闲资源，因此最多使用的资源量则是该参数控制。默认是-1，即禁用。 -->
yarn.scheduler.capacity.root.analysis.minimum-user-limit-percent=100
yarn.scheduler.capacity.root.analysis.ordering-policy=fifo
yarn.scheduler.capacity.root.analysis.priority=2
yarn.scheduler.capacity.root.analysis.state=RUNNING
<!--每个任务占用的最少资源。比如，你设置成了25%。那么如果有两个用户提交任务，那么每个任务资源不超过50%。如果3个用户提交任务，那么每个任务资源不超过33%。如果4个用户提交任务，那么每个任务资源不超过25%。如果5个用户提交任务，那么第五个用户需要等待才能提交。默认是100，即不去做限制。-->
yarn.scheduler.capacity.root.analysis.user-limit-factor=3


yarn.scheduler.capacity.root.default.acl_submit_applications=*
yarn.scheduler.capacity.root.default.capacity=30
yarn.scheduler.capacity.root.default.maximum-capacity=95
yarn.scheduler.capacity.root.default.ordering-policy=fair
yarn.scheduler.capacity.root.default.ordering-policy.fair.enable-size-based-weight=false
yarn.scheduler.capacity.root.default.priority=10
yarn.scheduler.capacity.root.default.state=RUNNING
<!--每个任务占用的最少资源。比如，你设置成了25%。那么如果有两个用户提交任务，那么每个任务资源不超过50%。如果3个用户提交任务，那么每个任务资源不超过33%。如果4个用户提交任务，那么每个任务资源不超过25%。如果5个用户提交任务，那么第五个用户需要等待才能提交。默认是100，即不去做限制。-->
yarn.scheduler.capacity.root.default.user-limit-factor=30


yarn.scheduler.capacity.root.onlinecrontab.acl_administer_queue=*
yarn.scheduler.capacity.root.onlinecrontab.acl_submit_applications=*
yarn.scheduler.capacity.root.onlinecrontab.capacity=65
yarn.scheduler.capacity.root.onlinecrontab.maximum-capacity=100
<!-- 队列资源的使用上限。由于系统空闲时，队列可以使用其他的空闲资源，因此最多使用的资源量则是该参数控制。默认是-1，即禁用。 -->
yarn.scheduler.capacity.root.onlinecrontab.minimum-user-limit-percent=100
yarn.scheduler.capacity.root.onlinecrontab.ordering-policy=fifo
yarn.scheduler.capacity.root.onlinecrontab.priority=10
yarn.scheduler.capacity.root.onlinecrontab.state=RUNNING
<!--每个任务占用的最少资源。比如，你设置成了25%。那么如果有两个用户提交任务，那么每个任务资源不超过50%。如果3个用户提交任务，那么每个任务资源不超过33%。如果4个用户提交任务，那么每个任务资源不超过25%。如果5个用户提交任务，那么第五个用户需要等待才能提交。默认是100，即不去做限制。-->
yarn.scheduler.capacity.root.onlinecrontab.user-limit-factor=10
yarn.scheduler.capacity.root.ordering-policy=priority-utilization
yarn.scheduler.capacity.root.priority=0